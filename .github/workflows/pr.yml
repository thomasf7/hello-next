name: PR

on: 
  pull_request:
    types: [opened, synchronize, reopened, closed]
  
jobs:
  build_and_deploy:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest

    env:
      node-version: 12.x

    steps:
    - uses: actions/checkout@v1
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Use Node.js ${{ env.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node-version }}
    - name: npm install
      run: |
        npm ci
    - name: npm install jetzt and fix
      run: |
        npm install -D jetzt
        # fix bug from next-server package files moving under next
        find node_modules/jetzt -name "parseNextConfig.*" -exec sed -i "s/next-server\/dist/next\/dist\/next-server/g" {} +
        # fix proxy template for static files so any request for an asset with an extension is proxied to storage (TODO: how reliable is this?)
        find node_modules/jetzt/ -name "templates.*" -exec sed -i -e "s/static\/{\*asset}/{asset}.{ext}/g" -e "s/static\/{asset}/public\/{asset}.{ext}/g" {} +
        # fix bug where static files are now expected to be stored in public directory
        find node_modules/jetzt/ -name "deploy.*" -exec sed -i "s/static/public/g" {} +
        # make sure public directory exists to prevent jetzt from failing
        mkdir -p public
    - name: generate jetzt config
      run: |
        echo "generating jetzt config file"
        resource_group=`az group show --name ${{ secrets.AZ_FUNC_RESOURCE_GROUP }}`
        location=$(node -p "var rg = ${resource_group}; rg.location")
        fetch_pull_request_id="jq '.pull_request.id' $GITHUB_EVENT_PATH"
        pull_request_id=$(eval "$fetch_pull_request_id")
        echo "Pull request id: $pull_request_id"
        name=$(echo "${{ secrets.AZ_FUNC_NAME }}-$pull_request_id}" | sed -e "s/[^a-zA-Z0-9\-]/-/g" -e "s/[^a-zA-Z0-9]$//g")
        echo "Function name: $name"
        echo "::set-env name=NEW_FUNC_NAME::$name"
        storage_account=$(echo "pr${{ secrets.AZ_STORAGE_NAME }}" | cut -c -24)
        echo "{\"functionApp\":{\"subscriptionId\":\"${{ secrets.AZ_SUBSCRIPTION_ID }}\",\"resourceGroup\":\"${{ secrets.AZ_FUNC_RESOURCE_GROUP }}\",\"location\":\"${location}\",\"name\":\"${name}\"},\"storage\":{\"account\":\"${storage_account}\"}}" > jetzt.config.json
    - name: build with jetzt
      run: npx jetzt .
    - name: Upload the application settings
      id: upload_app_settings_id
      uses: GiridharanNarayanan/upload_app_settings@master
      with:
        app_secrets: ${{ secrets.APP_SECRETS }}
        az_func_name: ${{ env.NEW_FUNC_NAME }}
        az_func_resource_group: ${{ secrets.AZ_FUNC_RESOURCE_GROUP }}
        
        
  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Clean up
      run: |
        echo "cleaning up function app"
        fetch_pull_request_id="jq '.pull_request.id' $GITHUB_EVENT_PATH"
        pull_request_id=$(eval "$fetch_pull_request_id")
        echo "Pull request id: $pull_request_id"
        name=$(echo "${{ secrets.AZ_FUNC_NAME }}-$pull_request_id}" | sed -e "s/[^a-zA-Z0-9\-]/-/g" -e "s/[^a-zA-Z0-9]$//g")
        echo "Function name: $name"
        echo "deleting ${name}"
        az functionapp delete --subscription ${{ secrets.AZ_SUBSCRIPTION_ID }} --resource-group ${{ secrets.AZ_FUNC_RESOURCE_GROUP }} --name ${name}
        az extension add -n application-insights
        az monitor app-insights component delete --subscription ${{ secrets.AZ_SUBSCRIPTION_ID }} --resource-group ${{ secrets.AZ_FUNC_RESOURCE_GROUP }} --app ${name}